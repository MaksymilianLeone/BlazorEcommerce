@page "/admin/articles"
@using BlazorEcommerce.Client.Services.ArticleService
@inject IArticleService ArticleService
@attribute [Authorize(Roles = "Admin")]
@implements IDisposable

<h3>Articles</h3>

@if (ArticleService.AdminArticles == null)
{
    <p>Loading...</p>
}
else if (!ArticleService.AdminArticles.Any())
{
    <p>No articles available.</p>
}
else
{
    <div class="header">
        <div class="col">Name</div>
        <div class="col">Url</div>
        <div class="col">Visible</div>
        <div class="col"></div>
    </div>

    @foreach (var article in ArticleService.AdminArticles)
    {
        if (article == null)
        {
            <span>No Articles Found</span>
        }
        else if (article.Editing)
        {
            <EditForm Model="editingArticle" OnSubmit="UpdateArticle">
                <div class="row">
                    <div class="col">
                        <InputText @bind-Value="editingArticle.Title" class="form-control"></InputText>
                    </div>
                    <div class="col">
                        <InputText @bind-Value="editingArticle.Description" class="form-control"></InputText>
                    </div>
                    <div class="col col-visible">
                        <InputCheckbox @bind-Value="editingArticle.Visible" style="transform: scale(1.5,1.5);"></InputCheckbox>
                    </div>
                    <div class="col">
                        <button type="submit" class="btn btn-primary">
                            <i class="oi oi-cloud-upload"></i>
                        </button>
                        <button class="btn btn-primary" @onclick="CancelEditing">
                            <i class="oi oi-circle-x"></i>
                        </button>
                    </div>
                </div>
            </EditForm>
        }
        else
        {
            <div class="row">
                <div class="col">
                    @article.Title
                </div>
                <div class="col">
                    @article.Description
                </div>
                <div class="col col-visible">
                    <span>@(article.Visible ? "✅" : "")</span>
                </div>
                <div class="col">
                    <button class="btn btn-primary" @onclick="(() => EditArticle(article))">
                        <i class="oi oi-pencil"></i>
                    </button>
                    <button class="btn btn-primary" @onclick="(() => DeleteArticle(article.Id))">
                        <i class="oi oi-trash"></i>
                    </button>
                </div>
            </div>
        }
    }
    <button class="btn btn-primary" @onclick="CreateNewArticle">
        <i class="oi oi-plus"></i> Add new article
    </button>
}



@code {
    Article editingArticle = null;

    protected override async Task OnInitializedAsync()
    {
        await ArticleService.GetAdminArticles();
        ArticleService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        ArticleService.OnChange -= StateHasChanged;
    }

    private void CreateNewArticle()
    {
        editingArticle = ArticleService.CreateNewArticle();
    }

    private void EditArticle(Article article)
    {
        article.Editing = true;
        editingArticle = article;
    }

    private async Task UpdateArticle()
    {
        if (editingArticle.IsNew)
        {
            await ArticleService.AddArticle(editingArticle);
        }
        else
        {
            await ArticleService.UpdateArticle(editingArticle);
        }

        editingArticle = new Article();
    }

    private async Task CancelEditing()
    {
        editingArticle = new Article();
        await ArticleService.GetAdminArticles();
    }

    private async Task DeleteArticle(int id)
    {
        await ArticleService.DeleteArticle(id);
    }
}
